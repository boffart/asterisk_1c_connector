
&НаКлиенте 
Перем ХЭШ_linkedid;

&НаСервере
// Начальная инициализация.
// 
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КлючИнтеграции = МИКО_тИнтеграция1СТелефонияСервер.КлючСлужебногоОбсуждения();
КонецПроцедуры

&НаКлиенте
// Обработка внешних событий.
// 
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если "МИКО_ВнешнееСобытие" = ИмяСобытия Тогда
		ВнешнееСобытие(Источник, Параметр.Данные, Параметр.Дата);
	ИначеЕсли "МИКО_ПодключитьМодульТелефонии" = ИмяСобытия Тогда 
		ПодключитьМодульТелефонии();	
	КонецЕсли; 
КонецПроцедуры


// Создание канала для оповещений.
// 
&НаКлиенте
Процедура СоздатьСлужебноеОбсуждение(Команда)
	МИКО_тИнтеграция1СТелефонияСервер.СоздатьСлужебноеОбсуждение();
КонецПроцедуры

///
// Подписка на события.

&НаКлиенте
Процедура ПодключитьМодульТелефонии()
	Если НЕ СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Возврат;	
	КонецЕсли; 
	КлючИнтеграции 	= МИКО_тИнтеграция1СТелефонияСервер.КлючСлужебногоОбсуждения();
	
	ХЭШ_linkedid = Новый Соответствие;
    ОшибкаПодключения 		  = Новый ОписаниеОповещения(,,,"ОбработкаОшибкиСервераВзаимодействий", 
														 МИКО_тИнтеграция1СТелефонияКлиент);
    ОбработкаСообщенийСервера = Новый ОписаниеОповещения("ОбработкаОповещенийСервераВзаимодействий", 
														 МИКО_тИнтеграция1СТелефонияКлиент);
    СистемаВзаимодействия.НачатьПодключениеОбработчикаНовыхСообщений(ОшибкаПодключения, 
																	 КлючИнтеграции, 
																	 ОбработкаСообщенийСервера);
	НашНомер = "" + ПолучитьНомерТекущегоПользователя();	
КонецПроцедуры

&НаСервереБезКонтекста
// Получаем наш внутренний номер.
// 
Функция ПолучитьНомерТекущегоПользователя()
	ВнутреннийНомер 	= "Непоределено";
	МассивНомеров = МИКО_тИнтеграция1СТелефонияСервер.ПолучитьНомераТелефоновПользователя();
	Для каждого ДанныеНомера Из МассивНомеров Цикл
		Если ДанныеНомера.Внутренний Тогда
		 	ВнутреннийНомер = ДанныеНомера.НомерТелефона;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 	
	Возврат ВнутреннийНомер;
КонецФункции

&НаСервереБезКонтекста
// Ищем клиента по номеру телефона.
// 
Функция ПолучитьАбонентаПоНомеруТелефона(Номер)
	Возврат ТелефонияСервер.ПолучитьАбонентаПоНомеруТелефона(Номер);
КонецФункции // ПолучитьАбонентаПоНомеруТелефона()
 
&НаКлиенте
// Обработка внешних событий с АТС.
// 
Процедура ВнешнееСобытие(Событие, Данные, Дата)
	Если (ТекущаяДата() - Дата) > 60 Тогда
		// Оповещение устарело.	
		Возврат;
	КонецЕсли; 
	
	Если "AttendedTransfer" = Событие И Данные.TransferTargetExten = НашНомер Тогда
	 	ЭтоНашКанал = Истина;
	Иначе
		ЭтоНашКанал = Найти(ВРЕГ(Данные.channel), "SIP/"+ВРег(НашНомер))>0;
	КонецЕсли;
	
	Если НЕ ЭтоНашКанал Тогда
		Возврат;
	КонецЕсли; 
	
	Если 	  "Newstate" = Событие И "4" = Данные.channelstate Тогда
		// Канал совершает исходящий вызов "4","Ring"
		ХЭШ_linkedid.Вставить(Данные.Linkedid, Данные);
		Если ЗначениеЗаполнено(Данные.connectedlinenum) И Найти(Данные.ConnectedLineName, "unknow")=0 Тогда
		 	НомерТелефона = Данные.connectedlinenum 
		Иначе	
		 	НомерТелефона = Данные.Exten
		КонецЕсли;
		
		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить("linkedid",		Данные.Linkedid);
		ПараметрыВызова.Вставить("НомерТелефона", 	НомерТелефона);
		ПараметрыВызова.Вставить("Контрагент", 		ПолучитьАбонентаПоНомеруТелефона(НомерТелефона) );
		ПараметрыВызова.Вставить("Действие", 		"ОткрытьКарточку");
		
		ТекстОповещения = "Выполнен исходящий вызов с " + Данные.CallerIDNum + " на " + НомерТелефона;
		// Подключаем обработчик действия. Открытие карточки клиента.
		ОпОп = Новый ОписаниеОповещения("ОткрытьКарточкуКлиента", 
										МИКО_тИнтеграция1СТелефонияКлиент, 
										ПараметрыВызова);
		// Отображаем уведомление.								
		ПоказатьОповещениеПользователя("Телефонный звонок", 
										ОпОп, 
										ТекстОповещения,
										, // БиблиотекаКартинок.ТелефонныйЗвонокВходящий,
										СтатусОповещенияПользователя.Важное,
										Данные.Linkedid);
		// 
	ИначеЕсли "Newstate" = Событие И "5" = Данные.channelstate Тогда
		// На канал пришел входящий вызов  "5","Ringing"
		ХЭШ_linkedid.Вставить(Данные.Linkedid, Данные);
		ТекстОповещения = "Поступил входящий вызов с " + Данные.connectedlinenum;
		
		ОпОп = Новый ОписаниеОповещения("ОткрытьКарточкуКлиента", 
										МИКО_тИнтеграция1СТелефонияКлиент, 
										ПараметрыВызова);
		// Отображаем уведомление.								
		ПоказатьОповещениеПользователя("Телефонный звонок", 
										ОпОп, 
										ТекстОповещения,
										, // БиблиотекаКартинок.ТелефонныйЗвонокВходящий,
										СтатусОповещенияПользователя.Важное,
										Данные.Linkedid);

	ИначеЕсли "Newstate" = Событие И "6" = Данные.channelstate Тогда
		// Подняли трубку "6","Up".
		СведенияПоID = ХЭШ_linkedid.Получить(Данные.Linkedid);
		Если СведенияПоID <> Неопределено И СведенияПоID.channelstate = "4" Тогда
			Входящий = Ложь;
			Если ЗначениеЗаполнено(Данные.connectedlinenum) И Найти(Данные.ConnectedLineName, "unknow")=0 Тогда
			 	НомерТелефона = Данные.connectedlinenum 
			Иначе	
			 	НомерТелефона = Данные.Exten
			КонецЕсли;
		Иначе	
			Входящий   = Истина;
			НомерТелефона = Данные.connectedlinenum;		
		КонецЕсли;

		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить("linkedid",		Данные.Linkedid);
		ПараметрыВызова.Вставить("ЗначениеКИ", 		НомерТелефона);
		ПараметрыВызова.Вставить("Контакт", 		ПолучитьАбонентаПоНомеруТелефона(НомерТелефона) );
		// ПараметрыВызова.Вставить("КонтактРодитель", ПолучитьАбонентаПоНомеруТелефона(НомерТелефона) );
		ПараметрыВызова.Вставить("ТипСобытия", 		ПредопределенноеЗначение("Перечисление.ТипыСобытий.ТелефонныйЗвонок"));
		ПараметрыВызова.Вставить("Входящий", 		Входящий);
		
		МИКО_тИнтеграция1СТелефонияКлиент.ОткрытьЗаполнитьДокументСобытие(ПараметрыВызова);
	ИначеЕсли "AttendedTransfer" = Событие Тогда
		Если "Success" = Данные.Result Тогда
			// НомерСотрудника 	= Данные.TransfereeConnectedLineNum;
			// НомерНазначения 	= Данные.TransferTargetExten;
		    НомерТелефона =Данные.TransfereeCallerIDNum; 
			ПараметрыВызова = Новый Структура;
			ПараметрыВызова.Вставить("linkedid",		Данные.OrigTransfererLinkedid);
			ПараметрыВызова.Вставить("ЗначениеКИ", 		НомерТелефона);
			ПараметрыВызова.Вставить("Контакт", 		ПолучитьАбонентаПоНомеруТелефона(Данные.TransfereeCallerIDNum) );
			ПараметрыВызова.Вставить("Входящий", 		Истина );
			// ПараметрыВызова.Вставить("КонтактРодитель", ПолучитьАбонентаПоНомеруТелефона(НомерТелефона) );
			ПараметрыВызова.Вставить("ТипСобытия", 		ПредопределенноеЗначение("Перечисление.ТипыСобытий.ТелефонныйЗвонок"));
			МИКО_тИнтеграция1СТелефонияКлиент.ОткрытьЗаполнитьДокументСобытие(ПараметрыВызова);
		КонецЕсли; 
		
	ИначеЕсли "Hangup" = Событие Тогда
		// Уничтожение канала. Завершение вызова.
		channel = МИКО_тИнтеграция1СТелефонияКлиент.ОтсечьПлечоВLocal(Данные.channel);		
		Если Найти(ВРЕГ(Данные.channel), "LOCAL")=1 Тогда
			Возврат;
		КонецЕсли; 		
		СведенияПоID = ХЭШ_linkedid.Получить(Данные.Linkedid);
		Если НЕ СведенияПоID = Неопределено Тогда
			Если СведенияПоID.channelstate = "4" Тогда
				Направление = "Исходящий";
				Если ЗначениеЗаполнено(СведенияПоID.connectedlinenum) И Найти(СведенияПоID.ConnectedLineName, "unknow")=0 Тогда
				 	НомерТелефона = СведенияПоID.connectedlinenum 
				Иначе	
				 	НомерТелефона = СведенияПоID.Exten
				КонецЕсли;
			Иначе	
				Направление   = "Входящий";
				НомерТелефона = СведенияПоID.connectedlinenum;		
			КонецЕсли;
			ТекстОповещения = Направление + " вызов ЗАВЕРШЕН. Наш номер " + СведенияПоID.CallerIDNum + ". Номер с кем говорим " + НомерТелефона;
			ОпОп = Новый ОписаниеОповещения("ОткрытьКарточкуКлиента", 
											МИКО_тИнтеграция1СТелефонияКлиент, 
											ПараметрыВызова);
			// Отображаем уведомление.								
			ПоказатьОповещениеПользователя("Телефонный звонок завершен", 
											ОпОп, 
											ТекстОповещения,
											, // БиблиотекаКартинок.ТелефонныйЗвонокВходящий,
											СтатусОповещенияПользователя.Важное,
											Данные.Linkedid);

			
		КонецЕсли; 
		// Чистим кэш.
		ХЭШ_linkedid.Удалить(Данные.linkedid);
	КонецЕсли;
	
КонецПроцедуры

/// 
// Управление взаимодействиями
/// 

&НаСервере
Процедура ЗаполнитьПользователейНаСервере()
	ПользователиТелефонии.Очистить();
	Если НЕ СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Сообщение = Новый СообщениеПользователю();
	    Сообщение.Текст = НСтр("ru = 'База не подкоючена к подсистеме взаимодействий.'");
	    Сообщение.Сообщить();
		Возврат;	
	КонецЕсли; 
	КлючИнтеграции 	= МИКО_тИнтеграция1СТелефонияСервер.КлючСлужебногоОбсуждения();
	Обсуждение 		= СистемаВзаимодействия.ПолучитьОбсуждение(КлючИнтеграции);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка,
		|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи";	
	РезультатЗапроса 	= Запрос.Выполнить();
	СписокПользователей = РезультатЗапроса.Выгрузить();

	Для каждого ПользовательИБ Из СписокПользователей Цикл
		СтрокаПользователя = ПользователиТелефонии.Добавить();
		СтрокаПользователя.Пользователь 					   = ПользовательИБ.Ссылка;
		СтрокаПользователя.УникальныйИдентификаторПользователя = ПользовательИБ.ИдентификаторПользователяИБ;

		Попытка
			ИДПользователя = СистемаВзаимодействия.ПолучитьИдентификаторПользователя(СтрокаПользователя.УникальныйИдентификаторПользователя);			
			СтрокаПользователя.ВзаимодействияАктивны = Истина;
		Исключение
			Продолжить;
		КонецПопытки;
		Если НЕ Обсуждение = Неопределено Тогда
			СтрокаПользователя.ПодключенКТелефонии = Обсуждение.Участники.Содержит(ИДПользователя);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПользователей(Команда)
	ЗаполнитьПользователейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПользователиТелефонииВзаимодействияАктивныПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПользователиТелефонии.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	 	Возврат;
	КонецЕсли; 
	Результат = МИКО_тИнтеграция1СТелефонияСервер.ПодключитьПользователяКВзаимодействиям(ТекущиеДанные.УникальныйИдентификаторПользователя);
	ТекущиеДанные.ВзаимодействияАктивны = (Результат<>Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиТелефонииПодключенКТелефонииПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПользователиТелефонии.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	 	Возврат;
	КонецЕсли;
	Добавить  = (ТекущиеДанные.ПодключенКТелефонии);
	
	Результат = МИКО_тИнтеграция1СТелефонияСервер.ПодключитьПользователяКТелефонии(ТекущиеДанные.УникальныйИдентификаторПользователя, Добавить);	
	ТекущиеДанные.ПодключенКТелефонии = (Результат);
КонецПроцедуры

